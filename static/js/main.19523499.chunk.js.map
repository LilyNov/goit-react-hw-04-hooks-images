{"version":3,"sources":["Searchbar/Searchbar.module.css","Modal/Modal.module.css","ImageGalleryItem/ImageGalleryItem.module.css","ImageGallery/ImageGallery.module.css","Button/Button.module.css","Searchbar/Searchbar.js","Modal/Modal.js","ImageGalleryItem/ImageGalleryItem.js","ImageGallery/ImageGallery.js","service/img-api.js","Loader/Loader.js","StatusError/StatusError.js","Button/Button.js","App.js","index.js"],"names":["module","exports","Searchbar","getImg","getPage","useState","image","setImage","className","s","SearchForm","onSubmit","e","preventDefault","trim","toast","warn","type","SearchFormButton","style","marginRight","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","onClose","handleBackdropClick","target","console","log","window","addEventListener","this","removeEventListener","src","alt","createPortal","Overlay","onClick","ModalImg","Component","ImageGalleryItem","state","showModal","toggleModal","setState","modalImg","ImageGalleryItemImage","ImageGallery","images","ItemList","map","webformatURL","tags","largeImageURL","id","api","fetchImages","name","page","fetch","then","response","ok","json","Promise","reject","Error","ImagePendingView","color","height","width","display","marginLeft","StatusError","message","role","Loader","propTypes","PropTypes","number","Button","scrollPageOnBtnMore","scroll","scrollToBottom","App","query","setQuery","setImages","error","setError","status","setStatus","setPage","useEffect","imgAPI","newImages","prevImages","hits","catch","textAlign","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.19523499.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2mcJV\",\"SearchForm\":\"Searchbar_SearchForm__2vJkW\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1uDZ7\",\"SearchFormInput\":\"Searchbar_SearchFormInput__C-yZ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3Vu8R\",\"ModalImg\":\"Modal_ModalImg__3fnD-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1HDn2\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__9CGIB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ItemList\":\"ImageGallery_ItemList__1b0VZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2muNP\"};","import { useState } from 'react';\r\nimport { BiSearchAlt } from 'react-icons/bi';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport s from '../Searchbar/Searchbar.module.css';\r\n\r\nexport default function Searchbar({ getImg, getPage }) {\r\n  const [image, setImage] = useState('');\r\n\r\n  //получение значения input\r\n  const handleNameChange = e => {\r\n    setImage(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  //отправка значения из формы\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (image.trim() === '') {\r\n      toast.warn('Fill out the form');\r\n      return;\r\n    }\r\n\r\n    getImg(image);\r\n    getPage(1);\r\n    setImage('');\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <BiSearchAlt style={{ marginRight: 8 }} />\r\n        </button>\r\n\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={image}\r\n          onChange={handleNameChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport s from '../Modal/Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log('Modal componentDidMount');\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('Modal componentWillUnmount');\r\n\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n\r\n    return createPortal(\r\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n        <div className={s.Modal}>\r\n          <img className={s.ModalImg} src={src} alt={alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../ImageGalleryItem/ImageGalleryItem.module.css';\r\nimport Modal from '../Modal/Modal';\r\n\r\nexport default class ImageGalleryItem extends Component {\r\n  state = {\r\n    showModal: false,\r\n  };\r\n\r\n  static propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\r\n  };\r\n\r\n  render() {\r\n    const { showModal } = this.state;\r\n    const { src, alt, modalImg } = this.props;\r\n    return (\r\n      <li className={s.ImageGalleryItem}>\r\n        <img\r\n          onClick={this.toggleModal}\r\n          src={src}\r\n          alt={alt}\r\n          className={s.ImageGalleryItemImage}\r\n        />\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal} src={modalImg} alt={alt} />\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import s from '../ImageGallery/ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ImageGallery({ images }) {\r\n  return (\r\n    <ul className={s.ItemList}>\r\n      {images.map(image => (\r\n        <ImageGalleryItem\r\n          src={image.webformatURL}\r\n          alt={image.tags}\r\n          modalImg={image.largeImageURL}\r\n          key={image.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n","function fetchImages(name, page) {\r\n  const KEY = '19029120-3d5d472043b9b4c189da88885';\r\n\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(new Error('Ошибка'));\r\n  });\r\n}\r\n\r\nconst api = { fetchImages };\r\n\r\nexport default api;\r\n","import Loader from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nexport default function ImagePendingView() {\r\n  return (\r\n    <Loader\r\n      type=\"Grid\"\r\n      color=\"#3f51b5\"\r\n      height={80}\r\n      width={80}\r\n      style={{\r\n        display: 'block',\r\n        marginLeft: 600,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nLoader.propTypes = {\r\n  marginLeft: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function StatusError({ message }) {\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>Oops, {message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatusError.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import { Component } from 'react';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\nimport s from '../Button/Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Button extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  scrollPageOnBtnMore = () => {\r\n    this.props.onClick();\r\n    scroll.scrollToBottom();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        onClick={this.scrollPageOnBtnMore}\r\n        className={s.Button}\r\n        type=\"button\"\r\n      >\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './Searchbar/Searchbar';\nimport PropTypes from 'prop-types';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport imgAPI from './service/img-api';\nimport Loader from './Loader/Loader';\nimport StatusError from './StatusError/StatusError';\nimport Button from './Button/Button';\n\nexport default function App() {\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    setStatus('pending');\n\n    imgAPI\n      .fetchImages(query, page)\n      .then(newImages => {\n        setImages(prevImages => [...prevImages, ...newImages.hits]);\n        setStatus('resolved');\n      })\n\n      // .then(newImages => {\n      //   setImages(newImages);\n      //   setStatus('resolved');\n      // })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [query, page]);\n\n  const onClickLoadMoreBtn = () => {\n    setPage(page => page + 1);\n  };\n\n  return (\n    <div>\n      <Searchbar getImg={setQuery} getPage={setPage} />\n\n      {status === 'idle' && <p style={{ textAlign: 'center' }}>Let's Go!</p>}\n\n      {status === 'pending' && <Loader />}\n\n      {status === 'rejected' && (\n        <StatusError message={error.message} style={{ textAlign: 'center' }} />\n      )}\n\n      {status === 'resolved' && (\n        <>\n          <ImageGallery images={images} />\n          <Button onClick={onClickLoadMoreBtn} />\n        </>\n      )}\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n\nApp.propTypes = {\n  imgItem: PropTypes.string,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}